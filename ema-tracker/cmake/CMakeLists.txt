cmake_minimum_required(VERSION 2.7)
PROJECT(ema-tracking-server)

SET(CMAKE_BUILD_TYPE release)
SET(CMAKE_CXX_FLAGS_RELEASE "-Ofast -std=c++11 -march=native -Wall -Wextra -fpermissive")
SET(CMAKE_C_FLAGS_RELEASE "-Ofast -std=c++11 -march=native -Wall -Wextra -fpermissive")
INCLUDE(ConfigureARMADILLO.cmake)
INCLUDE(ConfigureANN.cmake)
INCLUDE(ConfigureJSONCPP.cmake)
INCLUDE(ConfigureASIO.cmake)
INCLUDE(ConfigureYAMLCPP.cmake)

find_package( Threads )
find_package(ITK REQUIRED)
include(${ITK_USE_FILE})

IF(ARMADILLO_FOUND AND ANN_FOUND AND JSONCPP_FOUND AND ASIO_FOUND AND YAMLCPP_FOUND)
  SET(SRC_FILE "../src/bin/main.cpp")

  INCLUDE_DIRECTORIES("../../shared")
  INCLUDE_DIRECTORIES("../src/include")
  INCLUDE_DIRECTORIES(${ARMADILLO_INCLUDE_DIR})
  INCLUDE_DIRECTORIES(${ANN_INCLUDE_DIR})
  INCLUDE_DIRECTORIES(${ITK_INCLUDES})
  INCLUDE_DIRECTORIES(${JSONCPP_INCLUDE_DIR})
  INCLUDE_DIRECTORIES(${ASIO_INCLUDE_DIR})
  INCLUDE_DIRECTORIES(${YAMLCPP_INCLUDE_DIR})

  ADD_EXECUTABLE(ema-tracking-server ${SRC_FILE})
  TARGET_LINK_LIBRARIES(ema-tracking-server
    ${ITK_LIBRARIES}
    ${ARMADILLO_LIBRARIES}
    ${ANN_LIBRARIES}
    ${JSONCPP_LIBRARIES}
    ${CMAKE_THREAD_LIBS_INIT}
    ${YAMLCPP_LIBRARIES}
    )

ELSE(ARMADILLO_FOUND AND ANN_FOUND AND JSONCPP_FOUND AND ASIO_FOUND AND YAMLCPP_FOUND)
  Message("PROBLEM: One of the required libraries not found. ema-tracking-server will not be compiled.")
ENDIF(ARMADILLO_FOUND AND ANN_FOUND AND JSONCPP_FOUND AND ASIO_FOUND AND YAMLCPP_FOUND)
